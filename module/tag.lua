local util = require "util"

local function gen_protocol_tag(ast, namespace)
    local tags = {}
    for k,v in pairs(ast) do
        tags[#tags + 1] = {
            name = k,
            value  = v.tag,
        }
    end
    table.sort(tags, function (a, b) return a.name < b.name end)

    local outputs = {
        "-- Generated by sprotodump. DO NOT EDIT!",
        ("%s = {"):format(namespace)
    }
    for _, tag in ipairs(tags) do
        outputs[#outputs + 1] = ("\t%s = %s,"):format(tag.name, tag.value)
    end
    outputs[#outputs + 1] = "}\n"
    return table.concat(outputs, "\n")
end

local function main(trunk, build, param)
    local dir = param.dircetory or ""
    local outfile = param.outfile
    local out = gen_protocol_tag(build.protocol, param.package)
    util.write_file(dir .. outfile, out, "w")
end

return main
